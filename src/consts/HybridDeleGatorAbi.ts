export const HybridDeleGatorAbi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_delegationManager",
        type: "address",
        internalType: "contract IDelegationManager",
      },
      {
        name: "_entryPoint",
        type: "address",
        internalType: "contract IEntryPoint",
      },
    ],
    stateMutability: "nonpayable",
  },
  { type: "receive", stateMutability: "payable" },
  {
    type: "function",
    name: "DOMAIN_VERSION",
    inputs: [],
    outputs: [{ name: "", type: "string", internalType: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "NAME",
    inputs: [],
    outputs: [{ name: "", type: "string", internalType: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "PACKED_USER_OP_TYPEHASH",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "UPGRADE_INTERFACE_VERSION",
    inputs: [],
    outputs: [{ name: "", type: "string", internalType: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "VERSION",
    inputs: [],
    outputs: [{ name: "", type: "string", internalType: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "addDeposit",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "addKey",
    inputs: [
      { name: "_keyId", type: "string", internalType: "string" },
      { name: "_x", type: "uint256", internalType: "uint256" },
      { name: "_y", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "delegationManager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IDelegationManager",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "disableDelegation",
    inputs: [
      {
        name: "_delegation",
        type: "tuple",
        internalType: "struct Delegation",
        components: [
          { name: "delegate", type: "address", internalType: "address" },
          { name: "delegator", type: "address", internalType: "address" },
          { name: "authority", type: "bytes32", internalType: "bytes32" },
          {
            name: "caveats",
            type: "tuple[]",
            internalType: "struct Caveat[]",
            components: [
              { name: "enforcer", type: "address", internalType: "address" },
              { name: "terms", type: "bytes", internalType: "bytes" },
              { name: "args", type: "bytes", internalType: "bytes" },
            ],
          },
          { name: "salt", type: "uint256", internalType: "uint256" },
          { name: "signature", type: "bytes", internalType: "bytes" },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "eip712Domain",
    inputs: [],
    outputs: [
      { name: "fields", type: "bytes1", internalType: "bytes1" },
      { name: "name", type: "string", internalType: "string" },
      { name: "version", type: "string", internalType: "string" },
      { name: "chainId", type: "uint256", internalType: "uint256" },
      { name: "verifyingContract", type: "address", internalType: "address" },
      { name: "salt", type: "bytes32", internalType: "bytes32" },
      { name: "extensions", type: "uint256[]", internalType: "uint256[]" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "enableDelegation",
    inputs: [
      {
        name: "_delegation",
        type: "tuple",
        internalType: "struct Delegation",
        components: [
          { name: "delegate", type: "address", internalType: "address" },
          { name: "delegator", type: "address", internalType: "address" },
          { name: "authority", type: "bytes32", internalType: "bytes32" },
          {
            name: "caveats",
            type: "tuple[]",
            internalType: "struct Caveat[]",
            components: [
              { name: "enforcer", type: "address", internalType: "address" },
              { name: "terms", type: "bytes", internalType: "bytes" },
              { name: "args", type: "bytes", internalType: "bytes" },
            ],
          },
          { name: "salt", type: "uint256", internalType: "uint256" },
          { name: "signature", type: "bytes", internalType: "bytes" },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "entryPoint",
    inputs: [],
    outputs: [
      { name: "", type: "address", internalType: "contract IEntryPoint" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "execute",
    inputs: [
      {
        name: "_execution",
        type: "tuple",
        internalType: "struct Execution",
        components: [
          { name: "target", type: "address", internalType: "address" },
          { name: "value", type: "uint256", internalType: "uint256" },
          { name: "callData", type: "bytes", internalType: "bytes" },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "execute",
    inputs: [
      { name: "_mode", type: "bytes32", internalType: "ModeCode" },
      { name: "_executionCalldata", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "executeFromExecutor",
    inputs: [
      { name: "_mode", type: "bytes32", internalType: "ModeCode" },
      { name: "_executionCalldata", type: "bytes", internalType: "bytes" },
    ],
    outputs: [
      { name: "returnData_", type: "bytes[]", internalType: "bytes[]" },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "getDeposit",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDomainHash",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getImplementation",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getInitializedVersion",
    inputs: [],
    outputs: [{ name: "", type: "uint64", internalType: "uint64" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getKey",
    inputs: [{ name: "_keyId", type: "string", internalType: "string" }],
    outputs: [
      { name: "x_", type: "uint256", internalType: "uint256" },
      { name: "y_", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getKeyIdHashes",
    inputs: [],
    outputs: [{ name: "", type: "bytes32[]", internalType: "bytes32[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getKeyIdHashesCount",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getNonce",
    inputs: [{ name: "_key", type: "uint192", internalType: "uint192" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getNonce",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPackedUserOperationHash",
    inputs: [
      {
        name: "_userOp",
        type: "tuple",
        internalType: "struct PackedUserOperation",
        components: [
          { name: "sender", type: "address", internalType: "address" },
          { name: "nonce", type: "uint256", internalType: "uint256" },
          { name: "initCode", type: "bytes", internalType: "bytes" },
          { name: "callData", type: "bytes", internalType: "bytes" },
          {
            name: "accountGasLimits",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "preVerificationGas",
            type: "uint256",
            internalType: "uint256",
          },
          { name: "gasFees", type: "bytes32", internalType: "bytes32" },
          { name: "paymasterAndData", type: "bytes", internalType: "bytes" },
          { name: "signature", type: "bytes", internalType: "bytes" },
        ],
      },
    ],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPackedUserOperationTypedDataHash",
    inputs: [
      {
        name: "_userOp",
        type: "tuple",
        internalType: "struct PackedUserOperation",
        components: [
          { name: "sender", type: "address", internalType: "address" },
          { name: "nonce", type: "uint256", internalType: "uint256" },
          { name: "initCode", type: "bytes", internalType: "bytes" },
          { name: "callData", type: "bytes", internalType: "bytes" },
          {
            name: "accountGasLimits",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "preVerificationGas",
            type: "uint256",
            internalType: "uint256",
          },
          { name: "gasFees", type: "bytes32", internalType: "bytes32" },
          { name: "paymasterAndData", type: "bytes", internalType: "bytes" },
          { name: "signature", type: "bytes", internalType: "bytes" },
        ],
      },
    ],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      { name: "_owner", type: "address", internalType: "address" },
      { name: "_keyIds", type: "string[]", internalType: "string[]" },
      { name: "_xValues", type: "uint256[]", internalType: "uint256[]" },
      { name: "_yValues", type: "uint256[]", internalType: "uint256[]" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isDelegationDisabled",
    inputs: [
      { name: "_delegationHash", type: "bytes32", internalType: "bytes32" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isValidSignature",
    inputs: [
      { name: "_hash", type: "bytes32", internalType: "bytes32" },
      { name: "_signature", type: "bytes", internalType: "bytes" },
    ],
    outputs: [{ name: "magicValue_", type: "bytes4", internalType: "bytes4" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "onERC1155BatchReceived",
    inputs: [
      { name: "", type: "address", internalType: "address" },
      { name: "", type: "address", internalType: "address" },
      { name: "", type: "uint256[]", internalType: "uint256[]" },
      { name: "", type: "uint256[]", internalType: "uint256[]" },
      { name: "", type: "bytes", internalType: "bytes" },
    ],
    outputs: [{ name: "", type: "bytes4", internalType: "bytes4" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "onERC1155Received",
    inputs: [
      { name: "", type: "address", internalType: "address" },
      { name: "", type: "address", internalType: "address" },
      { name: "", type: "uint256", internalType: "uint256" },
      { name: "", type: "uint256", internalType: "uint256" },
      { name: "", type: "bytes", internalType: "bytes" },
    ],
    outputs: [{ name: "", type: "bytes4", internalType: "bytes4" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "onERC721Received",
    inputs: [
      { name: "", type: "address", internalType: "address" },
      { name: "", type: "address", internalType: "address" },
      { name: "", type: "uint256", internalType: "uint256" },
      { name: "", type: "bytes", internalType: "bytes" },
    ],
    outputs: [{ name: "", type: "bytes4", internalType: "bytes4" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "proxiableUUID",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "redeemDelegations",
    inputs: [
      { name: "_permissionContexts", type: "bytes[]", internalType: "bytes[]" },
      { name: "_modes", type: "bytes32[]", internalType: "ModeCode[]" },
      { name: "_executionCallDatas", type: "bytes[]", internalType: "bytes[]" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "reinitialize",
    inputs: [
      { name: "_version", type: "uint8", internalType: "uint8" },
      { name: "_owner", type: "address", internalType: "address" },
      { name: "_keyIds", type: "string[]", internalType: "string[]" },
      { name: "_xValues", type: "uint256[]", internalType: "uint256[]" },
      { name: "_yValues", type: "uint256[]", internalType: "uint256[]" },
      { name: "_deleteP256Keys", type: "bool", internalType: "bool" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "removeKey",
    inputs: [{ name: "_keyId", type: "string", internalType: "string" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [{ name: "_interfaceId", type: "bytes4", internalType: "bytes4" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [{ name: "_newOwner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateSigners",
    inputs: [
      { name: "_owner", type: "address", internalType: "address" },
      { name: "_keyIds", type: "string[]", internalType: "string[]" },
      { name: "_xValues", type: "uint256[]", internalType: "uint256[]" },
      { name: "_yValues", type: "uint256[]", internalType: "uint256[]" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradeToAndCall",
    inputs: [
      { name: "_newImplementation", type: "address", internalType: "address" },
      { name: "_data", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "upgradeToAndCallAndRetainStorage",
    inputs: [
      { name: "_newImplementation", type: "address", internalType: "address" },
      { name: "_data", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "validateUserOp",
    inputs: [
      {
        name: "_userOp",
        type: "tuple",
        internalType: "struct PackedUserOperation",
        components: [
          { name: "sender", type: "address", internalType: "address" },
          { name: "nonce", type: "uint256", internalType: "uint256" },
          { name: "initCode", type: "bytes", internalType: "bytes" },
          { name: "callData", type: "bytes", internalType: "bytes" },
          {
            name: "accountGasLimits",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "preVerificationGas",
            type: "uint256",
            internalType: "uint256",
          },
          { name: "gasFees", type: "bytes32", internalType: "bytes32" },
          { name: "paymasterAndData", type: "bytes", internalType: "bytes" },
          { name: "signature", type: "bytes", internalType: "bytes" },
        ],
      },
      { name: "", type: "bytes32", internalType: "bytes32" },
      {
        name: "_missingAccountFunds",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      { name: "validationData_", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withdrawDeposit",
    inputs: [
      {
        name: "_withdrawAddress",
        type: "address",
        internalType: "address payable",
      },
      { name: "_withdrawAmount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "AddedP256Key",
    inputs: [
      {
        name: "keyIdHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      { name: "keyId", type: "string", indexed: false, internalType: "string" },
      { name: "x", type: "uint256", indexed: false, internalType: "uint256" },
      { name: "y", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
  },
  { type: "event", name: "ClearedStorage", inputs: [], anonymous: false },
  { type: "event", name: "EIP712DomainChanged", inputs: [], anonymous: false },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RemovedP256Key",
    inputs: [
      {
        name: "keyIdHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      { name: "x", type: "uint256", indexed: false, internalType: "uint256" },
      { name: "y", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SentPrefund",
    inputs: [
      {
        name: "sender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      { name: "success", type: "bool", indexed: false, internalType: "bool" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SetDelegationManager",
    inputs: [
      {
        name: "newDelegationManager",
        type: "address",
        indexed: true,
        internalType: "contract IDelegationManager",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SetEntryPoint",
    inputs: [
      {
        name: "entryPoint",
        type: "address",
        indexed: true,
        internalType: "contract IEntryPoint",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TryExecuteUnsuccessful",
    inputs: [
      {
        name: "batchExecutionindex",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      { name: "result", type: "bytes", indexed: false, internalType: "bytes" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Upgraded",
    inputs: [
      {
        name: "implementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [{ name: "target", type: "address", internalType: "address" }],
  },
  { type: "error", name: "CannotRemoveLastSigner", inputs: [] },
  { type: "error", name: "ECDSAInvalidSignature", inputs: [] },
  {
    type: "error",
    name: "ECDSAInvalidSignatureLength",
    inputs: [{ name: "length", type: "uint256", internalType: "uint256" }],
  },
  {
    type: "error",
    name: "ECDSAInvalidSignatureS",
    inputs: [{ name: "s", type: "bytes32", internalType: "bytes32" }],
  },
  {
    type: "error",
    name: "ERC1967InvalidImplementation",
    inputs: [
      { name: "implementation", type: "address", internalType: "address" },
    ],
  },
  { type: "error", name: "ERC1967NonPayable", inputs: [] },
  { type: "error", name: "ExecutionFailed", inputs: [] },
  { type: "error", name: "FailedInnerCall", inputs: [] },
  {
    type: "error",
    name: "InputLengthsMismatch",
    inputs: [
      { name: "keyIdsLength", type: "uint256", internalType: "uint256" },
      { name: "xValuesLength", type: "uint256", internalType: "uint256" },
      { name: "yValuesLength", type: "uint256", internalType: "uint256" },
    ],
  },
  { type: "error", name: "InvalidEmptyKey", inputs: [] },
  { type: "error", name: "InvalidInitialization", inputs: [] },
  { type: "error", name: "InvalidShortString", inputs: [] },
  {
    type: "error",
    name: "KeyAlreadyExists",
    inputs: [{ name: "keyIdHash", type: "bytes32", internalType: "bytes32" }],
  },
  {
    type: "error",
    name: "KeyDoesNotExist",
    inputs: [{ name: "keyIdHash", type: "bytes32", internalType: "bytes32" }],
  },
  {
    type: "error",
    name: "KeyNotOnCurve",
    inputs: [
      { name: "x", type: "uint256", internalType: "uint256" },
      { name: "y", type: "uint256", internalType: "uint256" },
    ],
  },
  { type: "error", name: "NotDelegationManager", inputs: [] },
  { type: "error", name: "NotEntryPoint", inputs: [] },
  { type: "error", name: "NotEntryPointOrSelf", inputs: [] },
  { type: "error", name: "NotInitializing", inputs: [] },
  { type: "error", name: "NotSelf", inputs: [] },
  { type: "error", name: "SignersCannotBeEmpty", inputs: [] },
  {
    type: "error",
    name: "StringTooLong",
    inputs: [{ name: "str", type: "string", internalType: "string" }],
  },
  { type: "error", name: "UUPSUnauthorizedCallContext", inputs: [] },
  {
    type: "error",
    name: "UUPSUnsupportedProxiableUUID",
    inputs: [{ name: "slot", type: "bytes32", internalType: "bytes32" }],
  },
  {
    type: "error",
    name: "UnsupportedCallType",
    inputs: [{ name: "callType", type: "bytes1", internalType: "CallType" }],
  },
  {
    type: "error",
    name: "UnsupportedExecType",
    inputs: [{ name: "execType", type: "bytes1", internalType: "ExecType" }],
  },
] as const;